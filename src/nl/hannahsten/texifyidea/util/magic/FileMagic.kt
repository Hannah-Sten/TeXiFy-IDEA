package nl.hannahsten.texifyidea.util.magic

import nl.hannahsten.texifyidea.file.*
import nl.hannahsten.texifyidea.lang.commands.LatexGenericRegularCommand.BIBLIOGRAPHY
import nl.hannahsten.texifyidea.lang.commands.LatexGenericRegularCommand.INCLUDE

object FileMagic {

    /**
     * All file extensions of files that can be included (and where the included files contain language that needs to be considered).
     * sty extensions are preferred over tex extensions for the case when e.g. a main.tex file includes a main.sty file (generally it will not be the other way around).
     */
    val includeExtensions = listOf("sty", "tex", "cls", "bib")

    val automaticExtensions by lazy {
        mapOf(
            INCLUDE.cmd to LatexFileType.defaultExtension,
            BIBLIOGRAPHY.cmd to BibtexFileType.defaultExtension
        )
    }

    /**
     * All possible file types.
     */
    val fileTypes by lazy {
        setOf(
            LatexFileType,
            StyleFileType,
            ClassFileType,
            BibtexFileType,
            TikzFileType
        )
    }

    /**
     * All file extensions that have to be deleted when clearing auxiliary files.
     *
     * This list is the union of @generated_exts in latexmk and the defined Auxiliary files in TeXWorks, plus some additions.
     * (https://github.com/TeXworks/texworks/blob/9c8cc8b88505103cb8f43fe4105638c77c7e7303/res/resfiles/configuration/texworks-config.txt#L37).
     */
    val auxiliaryFileTypes = arrayOf("aux", "bbl", "bcf", "brf", "fls", "idx", "ind", "lof", "lot", "nav", "out", "snm", "toc", "glo", "gls", "ist", "xdy")

    /**
     * All file extensions that are probably generated by LaTeX and some common packages.
     * Because any package can generated new files, this list is not complete.
     */
    // Actually run.xml should be included (latexmk) but file extensions with a dot are not found currently, see Utils#File.extension
    val generatedFileTypes = auxiliaryFileTypes + arrayOf("blg", "dvi", "fdb_latexmk", "ilg", "log", "out.ps", "pdf", "xml", "sagetex.sage", "sagetex.scmd", "sagetex.sout", "synctex", "gz", "synctex(busy)", "upa", "doctest.sage", "xdv", "glg", "glstex")

    /**
     * All bibtex keys which have a reference to a (local) file in the content.
     */
    val bibtexFileKeys = setOf("bibsource", "file")

    /**
     * Extensions of index-related files, which are generated by makeindex-like programs and should be copied next to the main file for the index/glossary packages to work.
     */
    val indexFileExtensions = setOf("ind", "glo", "ist", "xdy")

    /**
     * Extensions of files required by bib2gls
     */
    val bib2glsDependenciesExtensions = setOf("aux", "glg", "log")

    /**
     * All extensions for graphic files.
     * This order is determined by the order in which \includegraphics tries the extensions to find files, as can be seen with
     * texdef -t pdflatex -p graphicx Gin@extensions
     */
    val graphicFileExtensions = listOf("pdf", "png", "jpg", "mps", "jpeg", "jbig2", "jb2", "PDF", "PNG", "JPG", "JPEG", "JBIG2", "JB2", "eps")
}