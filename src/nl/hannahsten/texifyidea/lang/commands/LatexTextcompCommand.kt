package nl.hannahsten.texifyidea.lang.commands

import nl.hannahsten.texifyidea.lang.LatexPackage
import nl.hannahsten.texifyidea.lang.LatexPackage.Companion.TEXTCOMP

/**
 * @author Hannah Schellekens
 */
enum class LatexTextcompCommand(
    override val command: String,
    override vararg val arguments: Argument = emptyArray(),
    override val dependency: LatexPackage = LatexPackage.DEFAULT,
    override val display: String? = null,
    override val isMathMode: Boolean = false,
    val collapse: Boolean = false
) : LatexCommand {

    TEXT_TILDE_LOW("texttildelow", dependency = TEXTCOMP, display = "˷"),
    TEXTASCIIMACRON("textasciimacron", dependency = TEXTCOMP, display = "¯"),
    TEXT_ASCII_ACUTE("textasciiacute", dependency = TEXTCOMP, display = "´"),
    TEXT_ASCII_DIERESIS("textasciidieresis", dependency = TEXTCOMP, display = "¨"),
    TEXT_ASCII_GRAVE("textasciigrave", dependency = TEXTCOMP, display = "`"),
    TEXT_ASCII_BREVE("textasciibreve", dependency = TEXTCOMP, display = "˘"),
    TEXT_ASCII_CARON("textasciicaron", dependency = TEXTCOMP, display = "˘"),
    TEXT_DOUBLE_ACUTE("textacutedbl", dependency = TEXTCOMP, display = "̋"),
    TEXT_DOUBLE_GRAVE("textgravedbl", dependency = TEXTCOMP, display = "̏"),
    TEXT_QUOTE_STRAIGHT_BASE("textquotestraightbase", dependency = TEXTCOMP, display = "‚"),
    TEXT_DOUBLE_QUOTE_STRAIGHT_BASE("textquotestraightdblbase", dependency = TEXTCOMP, display = "„"),
    TEXT_QUOTE_SINGLE("textquotesingle", dependency = TEXTCOMP, display = "‛"),
    TEXT_DOUBLE_HYPHEN("textdblhyphen", dependency = TEXTCOMP),
    TEXT_DOUBLE_HYPHEN_CHARACTER("textdblhyphenchar", dependency = TEXTCOMP),
    TEXTASTERISKCENTERED_TEXTCOMP("textasteriskcentered", dependency = TEXTCOMP, display = "∗"),
    TEXT_INTERROBANG("textinterrobang", dependency = TEXTCOMP, display = "‽"),
    TEXT_UPSIDE_DOWN_INTERROBANG("textinterrobangdown", dependency = TEXTCOMP),
    TEXTTWELVEUDASH("texttwelveudash", dependency = TEXTCOMP, display = "—"),
    TEXT_THREE_QUARTERS_EM_DASH("textthreequartersemdash", dependency = TEXTCOMP, display = "—"),
    TEXT_CURRENCY("textcurrency", dependency = TEXTCOMP, display = "¤"),
    TEXT_BAHT("textbaht", dependency = TEXTCOMP, display = "฿"),
    TEXT_GUARANI("textguarani", dependency = TEXTCOMP, display = "₲"),
    TEXT_WON("textwon", dependency = TEXTCOMP, display = "₩"),
    TEXT_CENT("textcent", dependency = TEXTCOMP, display = "¢"),
    TEXT_CENT_OLD_STYLE("textcentoldstyle", dependency = TEXTCOMP),
    TEXT_DOLLAR_OLD_STYLE("textdollaroldstyle", dependency = TEXTCOMP),
    TEXT_LIRA("textlira", dependency = TEXTCOMP, display = "₤"),
    TEXT_YEN("textyen", dependency = TEXTCOMP, display = "¥"),
    TEXT_DONG("textdong", dependency = TEXTCOMP, display = "₫"),
    TEXT_NAIRA("textnaira", dependency = TEXTCOMP, display = "₦"),
    TEXT_COLON_MONETARY("textcolonmonetary", dependency = TEXTCOMP, display = "₡"),
    TEXT_PESO("textpeso", dependency = TEXTCOMP, display = "₱"),
    TEXT_FLORIN("textflorin", dependency = TEXTCOMP, display = "ƒ"),
    TEXT_EURO("texteuro", dependency = TEXTCOMP, display = "€"),
    TEXT_COPYLEFT("textcopyleft", dependency = TEXTCOMP, display = "\uD83C\uDD2F"),
    TEXT_SERVICE_MARK("textservicemark", dependency = TEXTCOMP, display = "℠"),
    TEXT_ONE_HALF("textonehalf", dependency = TEXTCOMP, display = "½"),
    TEXT_ONE_QUARTER("textonequarter", dependency = TEXTCOMP, display = "¼"),
    TEXT_THREE_QUARTERS("textthreequarters", dependency = TEXTCOMP, display = "¾"),
    TEXT_ONE_SUPERIOR("textonesuperior", dependency = TEXTCOMP, display = "¹"),
    TEXT_TWO_SUPERIOR("texttwosuperior", dependency = TEXTCOMP, display = "²"),
    TEXT_THREE_SUPERIOR("textthreesuperior", dependency = TEXTCOMP, display = "³"),
    TEXT_NUMERO("textnumero", dependency = TEXTCOMP, display = "№"),
    TEXT_PER_TEN_THOUSAND("textpertenthousand", dependency = TEXTCOMP, display = "‱"),
    TEXT_PER_MILLE("textperthousand", dependency = TEXTCOMP, display = "‰"),
    TEXT_DISCOUNT("textdiscount", dependency = TEXTCOMP, display = "⁒"),
    TEXT_BLANK("textblank", dependency = TEXTCOMP, display = "␢"),
    TEXT_RECIPE("textrecipe", dependency = TEXTCOMP, display = "℞"),
    TEXT_ESTIMATED("textestimated", dependency = TEXTCOMP, display = "℮"),
    TEXT_REFERENCE_MARK("textreferencemark", dependency = TEXTCOMP, display = "※"),
    TEXT_MUSICAL_QUARTER_NOTE("textmusicalnote", dependency = TEXTCOMP, display = "♪"),
    TEXT_PILCROW("textpilcrow", dependency = TEXTCOMP, display = "¶"),
    TEXT_BIG_CIRCLE("textbigcircle", dependency = TEXTCOMP, display = "○"),
    TEXT_OPEN_BULLET("textopenbullet", dependency = TEXTCOMP, display = "◦"),
    TEXT_ORDINAL_INDICATOR_MASCULINE("textordmasculine", dependency = TEXTCOMP, display = "º"),
    TEXT_ORDINAL_INDICATOR_FEMININE("textordfeminine", dependency = TEXTCOMP, display = "ª"),
    TEXT_BORN("textborn", dependency = TEXTCOMP, display = "★"),
    TEXT_DIVORCED("textdivorced", dependency = TEXTCOMP, display = "⚮"),
    TEXT_DIED("textdied", dependency = TEXTCOMP, display = "✝"),
    TEXT_MARRIED("textmarried", dependency = TEXTCOMP, display = "⚭"),
    TEXT_LEAF("textleaf", dependency = TEXTCOMP),
    TEXT_CELCIUS("textcelsius", dependency = TEXTCOMP, display = "℃"),
    TEXT_DEGREE("textdegree", dependency = TEXTCOMP, display = "°"),
    TEXT_UPSIDE_DOWN_OHM("textmho", dependency = TEXTCOMP, display = "℧"),
    TEXT_OHM("textohm", dependency = TEXTCOMP, display = "Ω"),
    TEXT_BROKEN_BAR("textbrokenbar", dependency = TEXTCOMP, display = "¦"),
    TEXT_DOUBLE_BAR("textbardbl", dependency = TEXTCOMP, display = "‖"),
    TEXT_FRACTION_SOLIDUS("textfractionsolidus", dependency = TEXTCOMP, display = "⁄"),
    TEXT_LEFT_ANGLE_BRACKET("textlangle", dependency = TEXTCOMP, display = "〈"),
    TEXT_RIGHT_ANGLE_BRACKET("textrangle", dependency = TEXTCOMP, display = "〉"),
    TEXT_LEFT_NOT("textlnot", dependency = TEXTCOMP, display = "¬"),
    TEXT_MINUS("textminus", dependency = TEXTCOMP, display = "−"),
    TEXT_LEFT_DOUBLE_BRACKET("textlbrackdbl", dependency = TEXTCOMP, display = "〚"),
    TEXT_RIGHT_DOUBLE_BRACKET("textrbrackdbl", dependency = TEXTCOMP, display = "〛"),
    TEXT_MU("textmu", dependency = TEXTCOMP, display = "μ"),
    TEXT_PLUS_MINUS("textpm", dependency = TEXTCOMP, display = "±"),
    TEXT_LEFT_QUILL("textlquill", dependency = TEXTCOMP, display = "⁅"),
    TEXT_RIGHT_QUILL("textrquill", dependency = TEXTCOMP, display = "⁆"),
    TEXT_SURD("textsurd", dependency = TEXTCOMP, display = "√"),
    TEXT_TIMES("texttimes", dependency = TEXTCOMP, display = "×"),
    TEXT_DIVIDE("textdiv", dependency = TEXTCOMP, display = "÷"),
    ;

    override val identifier: String
        get() = name
}